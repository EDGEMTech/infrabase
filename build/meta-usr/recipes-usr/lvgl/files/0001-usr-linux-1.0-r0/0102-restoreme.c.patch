--- /home/rossierd/soo/infrabase/build/tmp/work/usr-linux-1.0-r0/usr-linux-1.0/src/soo/restoreme.c	1970-01-01 01:00:00.000000000 +0100
+++ ./src/soo/restoreme.c	2025-09-03 16:56:16.402956141 +0200
@@ -0,0 +1,76 @@
+/*
+ * Copyright (C) 2014-2020 Daniel Rossier <daniel.rossier@soo.tech>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ *
+ */
+
+#include <stdlib.h>
+#include <unistd.h>
+#include <fcntl.h>
+#include <assert.h>
+#include <stdio.h>
+
+#include <sys/ioctl.h>
+#include <sys/stat.h>
+
+#include <soo/uapi/soo.h>
+
+#include <zip.h>
+
+int fd_core;
+
+int main(int argc, char *argv[]) {
+	struct agency_ioctl_args args;
+	size_t buffer_size;
+	struct zip_t *zip;
+
+        printf("*** SOO - Mobile Entity snapshot restorer ***\n");
+
+	if (argc != 2) {
+		printf("## Usage is : restoreme <filename> where <filename> is the file containing the ME snapshot.\n");
+		exit(-1);
+	}
+
+	printf("** Now reading the ME snapshot.\n");
+
+	fd_core = open("/dev/soo/core", O_RDWR);
+	assert(fd_core > 0);
+
+	/* Uncompress the saved snapshot */
+	zip = zip_open(argv[1], 0, 'r');
+	 
+	if (!zip) {
+                printf("Failed to open the zip file. Is there a bad sync after saving the snapshot?...\n");
+		perror("");
+                return EXIT_FAILURE;
+	}
+
+	zip_entry_open(zip, "me");
+	zip_entry_read(zip, &args.buffer, &buffer_size);
+	zip_entry_close(zip);
+
+	zip_close(zip);
+        
+	printf("  ** ME memory re-implantation and resuming the capsule.\n");
+
+	args.slotID = -1;
+	ioctl(fd_core, AGENCY_IOCTL_WRITE_SNAPSHOT, &args);
+
+	close(fd_core);
+
+	printf("  ** ME successfully restored and resumed...\n");
+
+	return 0;
+}
