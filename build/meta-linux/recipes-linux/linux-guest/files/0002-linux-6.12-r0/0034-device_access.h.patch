--- /home/rossierd/soo/micofe/build/tmp/work/linux-6.12-r0/linux-6.12/soo/include/soo/device_access.h	1970-01-01 01:00:00.000000000 +0100
+++ ./soo/include/soo/device_access.h	2025-08-24 11:46:06.523263394 +0200
@@ -0,0 +1,56 @@
+/*
+ * Copyright (C) 2017-2019 Baptiste Delporte <bonel@bonel.net>
+ * Copyright (C) 2016-2019 Daniel Rossier <daniel.rossier@heig-vd.ch>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ *
+ */
+
+#ifndef DEVICE_ACCESS_H
+#define DEVICE_ACCESS_H
+
+#include <linux/device.h>
+
+#include <soo/uapi/soo.h>
+#include <soo/uapi/console.h>
+
+/* Helper function to display agencyUID or any 64-bit identifier */
+static inline void soo_log_printUID(uint64_t uid) {
+	int i;
+	uint8_t *c = (uint8_t *) &uid;
+
+	if (!uid)
+		soo_log("n/a");
+	else
+		for (i = 0; i < 8; i++ ) {
+			soo_log("%02x ", *(c+7-i)); /* Display byte per byte arranged from little-endian  */
+		}
+}
+
+/* Helper function to display agencyUID or any 64-bit identifier */
+static inline void soo_log_printlnUID(uint64_t uid) {
+	soo_log_printUID(uid);
+	soo_log("\n");
+}
+
+void set_agencyUID(uint64_t val);
+
+/* sysfs handlers */
+ssize_t agencyUID_show(struct device *dev, struct device_attribute *attr, char *buf);
+ssize_t agencyUID_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t size);
+ssize_t soo_name_show(struct device *dev, struct device_attribute *attr, char *buf);
+ssize_t soo_name_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t size);
+
+
+#endif /* DEVICE_ACCESS_H */
